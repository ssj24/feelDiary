{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Media } from '@awesome-cordova-plugins/media/ngx';\nimport { Directory, Filesystem } from '@capacitor/filesystem';\nimport { VoiceRecorder } from 'capacitor-voice-recorder';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@awesome-cordova-plugins/media/ngx\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"../../../recording.service\";\nimport * as i4 from \"@angular/common\";\n\nfunction RecordingComponent_ion_img_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-img\", 11);\n  }\n\n  if (rf & 2) {\n    const feel_r3 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate1(\"src\", \"./assets/feeling/\", feel_r3, \".svg\");\n  }\n}\n\nfunction RecordingComponent_ion_button_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-button\", 12);\n    i0.ɵɵlistener(\"click\", function RecordingComponent_ion_button_12_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onPlayClicked());\n    });\n    i0.ɵɵelement(1, \"ion-icon\", 13);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RecordingComponent_ion_button_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-button\", 14);\n    i0.ɵɵlistener(\"click\", function RecordingComponent_ion_button_13_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onPauseClicked());\n    });\n    i0.ɵɵelement(1, \"ion-icon\", 15);\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let RecordingComponent = /*#__PURE__*/(() => {\n  class RecordingComponent {\n    constructor(media, modalCtrl, recordService) {\n      this.media = media;\n      this.modalCtrl = modalCtrl;\n      this.recordService = recordService;\n      this.imgList = ['happy', 'soso', 'good', 'excite', 'great', 'uneasy', 'sad', 'not_good', 'lonely', 'depressed', 'surprise', 'upset', 'unpleasant'];\n      this.feelings = [];\n      this.numbers = [];\n      this.isRecording = false;\n      this.isPaused = false;\n      this.storedFileNames = [];\n      this.duration = 0;\n      this.durationDisplay = '0.00';\n      this.interval = null;\n      this.recordData = null;\n    }\n\n    ngOnInit() {\n      for (let i = 0; i < 3; i++) {\n        let num = this.getRandomInt(this.imgList.length);\n\n        while (this.numbers.includes(num)) {\n          num = this.getRandomInt(this.imgList.length);\n        }\n\n        this.feelings.push(this.imgList[num]);\n        this.numbers.push(num);\n      }\n\n      this.loadFiles();\n      VoiceRecorder.requestAudioRecordingPermission(); // 거절하면 어떡할 지는 로직을 따로 짜야함\n    }\n\n    getRandomInt(max) {\n      return Math.floor(Math.random() * max);\n    }\n\n    timeCalc() {\n      if (this.isPaused) {\n        return;\n      } else if (!this.isRecording) {\n        this.duration = 0;\n        this.durationDisplay = '0.00';\n        return;\n      }\n\n      this.duration += 1;\n      const minutes = Math.floor(this.duration / 60);\n      const seconds = (this.duration % 60).toString().padStart(2, '0');\n      this.durationDisplay = minutes + ':' + seconds;\n      setTimeout(() => {\n        this.timeCalc();\n      }, 1000);\n    }\n\n    onPlayClicked() {\n      if (this.isRecording) {\n        return;\n      }\n\n      if (!this.isRecording && this.isPaused) {\n        this.isRecording = true;\n        this.isPaused = false;\n        this.timeCalc();\n        return VoiceRecorder.resumeRecording();\n      }\n\n      this.isRecording = true;\n      VoiceRecorder.startRecording();\n      this.timeCalc();\n    }\n\n    onPauseClicked() {\n      if (this.isPaused) {\n        return;\n      }\n\n      clearInterval(this.interval);\n      this.isRecording = false;\n      this.isPaused = true;\n      VoiceRecorder.pauseRecording();\n    }\n\n    onStopClicked() {\n      if (!this.isRecording) {\n        return;\n      }\n\n      clearInterval(this.interval);\n      this.isRecording = false;\n      this.timeCalc();\n      VoiceRecorder.stopRecording().then(record => __awaiter(this, void 0, void 0, function* () {\n        if (record.value && record.value.recordDataBase64) {\n          const recordData = record.value.recordDataBase64;\n          console.log(record.value.mimeType);\n          this.recordData = recordData;\n          const duration = record.value.msDuration;\n          const fileName = new Date().getTime() + '.wav';\n          yield Filesystem.writeFile({\n            path: fileName,\n            directory: Directory.Data,\n            data: recordData\n          });\n          this.loadFiles();\n          this.sendRecord();\n        }\n      }));\n    }\n\n    playFile(fileNames) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const audioFile = yield Filesystem.readFile({\n          path: fileNames.name,\n          directory: Directory.Data\n        });\n        const base64Sound = audioFile.data;\n        const audioRef = new Audio(`data:audio/webm;base64,${base64Sound}`);\n        this.recordData = audioRef.src;\n        console.log(this.recordData);\n\n        audioRef.oncanplaythrough = () => audioRef.play();\n\n        audioRef.load();\n      });\n    }\n\n    loadFiles() {\n      return __awaiter(this, void 0, void 0, function* () {\n        Filesystem.readdir({\n          path: '',\n          directory: Directory.Data\n        }).then(result => {\n          console.log('load', result.files[0]);\n          this.storedFileNames = result.files;\n        });\n      });\n    }\n\n    sendRecord() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const data = yield this.recordService.addRecording(this.recordData);\n        yield this.modalCtrl.dismiss(data, 'confirm');\n      });\n    }\n\n    onFileUpload(e) {\n      const element = e.currentTarget;\n      const fileList = element.files;\n      console.log(fileList);\n\n      if (fileList) {\n        this.recordService.addRecording(fileList[0]);\n      }\n    }\n\n  }\n\n  RecordingComponent.ɵfac = function RecordingComponent_Factory(t) {\n    return new (t || RecordingComponent)(i0.ɵɵdirectiveInject(i1.Media), i0.ɵɵdirectiveInject(i2.ModalController), i0.ɵɵdirectiveInject(i3.RecordingService));\n  };\n\n  RecordingComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RecordingComponent,\n    selectors: [[\"app-recording\"]],\n    decls: 18,\n    vars: 5,\n    consts: [[1, \"ion-padding\"], [1, \"imgContainer\", \"ion-padding\"], [\"src\", \"./assets/feel_tab.svg\"], [3, \"src\", 4, \"ngFor\", \"ngForOf\"], [1, \"ion-text-center\"], [1, \"dFlex\"], [\"color\", \"custom\", \"shape\", \"circle\", 1, \"stopBtn\", 3, \"disabled\", \"click\"], [\"slot\", \"icon-only\", \"size\", \"large\", \"name\", \"stop\"], [\"class\", \"playBtn\", \"size\", \"large\", \"color\", \"custom\", \"shape\", \"circle\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"pauseBtn\", \"size\", \"large\", \"color\", \"custom\", \"shape\", \"circle\", 3, \"click\", 4, \"ngIf\"], [1, \"redDot\"], [3, \"src\"], [\"size\", \"large\", \"color\", \"custom\", \"shape\", \"circle\", 1, \"playBtn\", 3, \"click\"], [\"slot\", \"icon-only\", \"name\", \"play\", \"size\", \"large\"], [\"size\", \"large\", \"color\", \"custom\", \"shape\", \"circle\", 1, \"pauseBtn\", 3, \"click\"], [\"slot\", \"icon-only\", \"name\", \"pause\", \"size\", \"large\"]],\n    template: function RecordingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-content\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"ion-img\", 2);\n        i0.ɵɵtemplate(3, RecordingComponent_ion_img_3_Template, 1, 1, \"ion-img\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"p\", 4);\n        i0.ɵɵtext(5, \"\\uC624\\uB298 \\uD558\\uB8E8\\uB97C \\uAE30\\uB85D \\uC911\\uC774\\uC608\\uC694 :)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"ion-grid\")(7, \"ion-row\")(8, \"ion-col\", 5)(9, \"ion-button\", 6);\n        i0.ɵɵlistener(\"click\", function RecordingComponent_Template_ion_button_click_9_listener() {\n          return ctx.onStopClicked();\n        });\n        i0.ɵɵelement(10, \"ion-icon\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"ion-col\", 5);\n        i0.ɵɵtemplate(12, RecordingComponent_ion_button_12_Template, 2, 0, \"ion-button\", 8);\n        i0.ɵɵtemplate(13, RecordingComponent_ion_button_13_Template, 2, 0, \"ion-button\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"ion-col\", 5);\n        i0.ɵɵelement(15, \"div\", 10);\n        i0.ɵɵelementStart(16, \"p\");\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.feelings);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"disabled\", !ctx.isRecording);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isRecording);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isRecording);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.durationDisplay);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i2.IonButton, i2.IonCol, i2.IonContent, i2.IonGrid, i2.IonIcon, i2.IonImg, i2.IonRow],\n    styles: [\".imgContainer[_ngcontent-%COMP%]{margin:20px auto;width:100px;height:70px;position:relative}.imgContainer[_ngcontent-%COMP%]   ion-img[_ngcontent-%COMP%]{position:absolute;width:30%;height:30%}.imgContainer[_ngcontent-%COMP%]   ion-img[_ngcontent-%COMP%]:nth-child(1){width:60%;height:60%;bottom:0;left:18px}.imgContainer[_ngcontent-%COMP%]   ion-img[_ngcontent-%COMP%]:nth-child(2){top:20px;left:-10px}.imgContainer[_ngcontent-%COMP%]   ion-img[_ngcontent-%COMP%]:nth-child(3){top:0;right:35px}.imgContainer[_ngcontent-%COMP%]   ion-img[_ngcontent-%COMP%]:nth-child(4){bottom:15px;right:-10px}.redDot[_ngcontent-%COMP%]{width:5px;height:5px;border-radius:50%;background-color:red;margin-right:5px}\"]\n  });\n  return RecordingComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}