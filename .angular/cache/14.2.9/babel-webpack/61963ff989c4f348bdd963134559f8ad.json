{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@awesome-cordova-plugins/media/ngx\";\nimport * as i2 from \"@ionic/angular\";\nexport let Tab3Page = /*#__PURE__*/(() => {\n  class Tab3Page {\n    constructor(media) {\n      this.media = media;\n      this.video = document.querySelector('video');\n      this.constraints = {\n        audio: true,\n        video: false\n      };\n    }\n\n    ngOnInit() {\n      this.record = this.media.create('file.mp3');\n      this.record.onStatusUpdate.subscribe(status => console.log(status)); // fires when file status changes\n\n      this.record.onSuccess.subscribe(() => console.log('Action is successful'));\n      this.record.onError.subscribe(error => console.log('Error!', error));\n    }\n\n    onStartRecord() {\n      // play the file\n      // record.play();\n      // pause the file\n      // record.pause();\n      // get current playback position\n      // record.getCurrentPosition().then((position) => {\n      //   console.log(position);\n      // });\n      // get file duration\n      // const duration = record.getDuration();\n      // console.log(duration);\n      // skip to 10 seconds (expects int value in ms)\n      // record.seekTo(10000);\n      // stop playing the file\n      // record.stop();\n      // release the native audio resource\n      // Platform Quirks:\n      // iOS simply create a new instance and the old one will be overwritten\n      // Android you must call release() to destroy instances of media when you are done\n      // record.release();\n      // Recording to a file\n      // this.record.startRecord();\n      // record.stopRecord();\n      navigator.mediaDevices.getUserMedia(this.constraints).then(stream => {\n        console.log('getusermedia', stream);\n        const audioTracks = stream.getAudioTracks();\n        console.log('Got stream with constraints:', this.constraints);\n        console.log(audioTracks);\n\n        stream.onremovetrack = () => {\n          console.log('Stream ended');\n          console.log(stream);\n        }; // video.srcObject = stream;\n\n      }).catch(error => {\n        if (error.name === 'ConstraintNotSatisfiedError') {\n          console.error(`The resolution is not supported by your device.`);\n        } else if (error.name === 'PermissionDeniedError') {\n          console.error('Permissions have not been granted to use your camera and ' + 'microphone, you need to allow the page access to your devices in ' + 'order for the demo to work.');\n        } else {\n          console.error(`getUserMedia error: ${error.name}`, error);\n        }\n      });\n    }\n\n    onStopRecord() {// this.record.stopRecord();\n      // console.log(this.record);\n    }\n\n    onPlayRecord() {// this.record.play();\n    }\n\n  }\n\n  Tab3Page.ɵfac = function Tab3Page_Factory(t) {\n    return new (t || Tab3Page)(i0.ɵɵdirectiveInject(i1.Media));\n  };\n\n  Tab3Page.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Tab3Page,\n    selectors: [[\"app-tab3\"]],\n    decls: 16,\n    vars: 2,\n    consts: [[3, \"translucent\"], [3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"], [3, \"click\"]],\n    template: function Tab3Page_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\");\n        i0.ɵɵtext(3, \" Tab 3 \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(4, \"ion-content\", 1)(5, \"ion-header\", 2)(6, \"ion-toolbar\")(7, \"ion-title\", 3);\n        i0.ɵɵtext(8, \"Tab 3\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"ion-card\")(10, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function Tab3Page_Template_button_click_10_listener() {\n          return ctx.onStartRecord();\n        });\n        i0.ɵɵtext(11, \"record\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function Tab3Page_Template_button_click_12_listener() {\n          return ctx.onStopRecord();\n        });\n        i0.ɵɵtext(13, \"stop\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function Tab3Page_Template_button_click_14_listener() {\n          return ctx.onPlayRecord();\n        });\n        i0.ɵɵtext(15, \"play\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"translucent\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"fullscreen\", true);\n      }\n    },\n    dependencies: [i2.IonCard, i2.IonContent, i2.IonHeader, i2.IonTitle, i2.IonToolbar]\n  });\n  return Tab3Page;\n})();","map":null,"metadata":{},"sourceType":"module"}