{"ast":null,"code":"import { __awaiter } from \"tslib\";\n/* eslint-disable max-len */\n\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@ionic/angular\";\nexport let Tab1Page = /*#__PURE__*/(() => {\n  class Tab1Page {\n    constructor(http) {\n      this.http = http;\n      this.constraints = {\n        audio: true,\n        video: false\n      };\n      this.chunks = [];\n    }\n\n    ngAfterViewInit() {\n      this.startRecordButton = document.getElementById('startRecordButton');\n      this.stopRecordButton = document.getElementById('stopRecordButton');\n      this.soundClips = document.getElementById('soundClipContainer');\n      this.startRecordButton.addEventListener('click', () => __awaiter(this, void 0, void 0, function* () {\n        if (navigator.mediaDevices) {\n          this.stream = yield navigator.mediaDevices.getUserMedia(this.constraints);\n          const mediaOptions = {\n            mimeType: 'audio/mpeg'\n          };\n          this.mRec = new MediaRecorder(this.stream); // visualize(stream);\n\n          this.onStartRecord();\n        }\n      }));\n      this.stopRecordButton.addEventListener('click', () => {\n        this.mRec.stop();\n        console.log(this.mRec.state);\n        console.log('recorder stopped');\n        this.stopRecordButton.setAttribute('disabled', '');\n        this.startRecordButton.removeAttribute('disabled');\n        const clipContainer = document.createElement('article');\n        const clipLabel = document.createElement('p');\n        const audio = document.createElement('audio');\n        const deleteButton = document.createElement('button');\n        const saveButton = document.createElement('button');\n        clipContainer.classList.add('clip');\n        audio.setAttribute('controls', '');\n        deleteButton.textContent = 'Delete';\n        saveButton.textContent = 'Save';\n        clipLabel.textContent = new Date().toTimeString();\n        clipContainer.appendChild(audio);\n        clipContainer.appendChild(clipLabel);\n        clipContainer.appendChild(deleteButton);\n        clipContainer.appendChild(saveButton);\n        this.soundClips.appendChild(clipContainer);\n        audio.controls = true;\n        this.blob = new Blob(this.chunks, {\n          type: 'audio/ogg; codecs=opus'\n        });\n        this.chunks = [];\n        const audioURL = URL.createObjectURL(this.blob);\n        audio.src = audioURL;\n        console.log('recorder stopped');\n\n        deleteButton.onclick = e => {\n          const evtTgt = e.target;\n          evtTgt.parentNode.parentNode.removeChild(evtTgt.parentNode);\n        };\n\n        this.mRec.ondataavailable = e => {\n          this.chunks.push(e.data);\n        };\n\n        saveButton.addEventListener('click', () => this.onSave(this.blob));\n      });\n    }\n\n    onStartRecord() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.mRec.start();\n        console.log(this.mRec.state);\n        console.log('recorder started');\n        this.startRecordButton.setAttribute('disabled', '');\n        this.stopRecordButton.removeAttribute('disabled');\n      });\n    }\n\n    onTest() {\n      const data = {\n        data: 'none'\n      };\n      this.http.post(`https://192.168.31.35/SttAnalysis/`, data, {\n        headers: new HttpHeaders().set('Content-Type', 'application/json')\n      }).toPromise().then(res => {\n        console.log(res);\n        return res;\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n    onSave(blob) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const recordedFile = new File([blob], 'audiorecord_cur.ogg');\n        console.log(recordedFile);\n        const form = new FormData();\n        form.append('file', recordedFile);\n        const container = new DataTransfer();\n        container.items.add(recordedFile);\n        console.log(container);\n        const data = {\n          data: 'none'\n        }; // multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW\n        // application/json\n\n        this.http.post(`https://192.168.31.35/SttAnalysis/`, data, {\n          headers: new HttpHeaders().set('Content-Type', 'application/json')\n        }).toPromise().then(res => {\n          console.log(res);\n          return res;\n        }).catch(err => {\n          console.log(err);\n        });\n      });\n    }\n\n  }\n\n  Tab1Page.ɵfac = function Tab1Page_Factory(t) {\n    return new (t || Tab1Page)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n\n  Tab1Page.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Tab1Page,\n    selectors: [[\"app-tab1\"]],\n    decls: 21,\n    vars: 2,\n    consts: [[3, \"translucent\"], [1, \"thisismine\"], [3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"], [\"href\", \"https://web.dev/patterns/media/microphone-record/\"], [\"id\", \"startRecordButton\"], [\"id\", \"stopRecordButton\", \"disabled\", \"\"], [\"id\", \"logs\"], [\"id\", \"soundClipContainer\"], [\"id\", \"test\", 3, \"click\"]],\n    template: function Tab1Page_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\", 1);\n        i0.ɵɵtext(3, \" \\uAC10\\uC815\\uC77C\\uAE30 \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(4, \"ion-content\", 2)(5, \"ion-header\", 3)(6, \"ion-toolbar\")(7, \"ion-title\", 4);\n        i0.ɵɵtext(8, \"\\uAC10\\uC815\\uC77C\\uAE30\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"ion-card\")(10, \"div\")(11, \"a\", 5);\n        i0.ɵɵtext(12, \"link\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"button\", 6);\n        i0.ɵɵtext(14, \"Start recording\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 7);\n        i0.ɵɵtext(16, \"Stop recording\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"pre\", 8)(18, \"div\", 9);\n        i0.ɵɵelementStart(19, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function Tab1Page_Template_button_click_19_listener() {\n          return ctx.onTest();\n        });\n        i0.ɵɵtext(20, \"test\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"translucent\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"fullscreen\", true);\n      }\n    },\n    dependencies: [i2.IonCard, i2.IonContent, i2.IonHeader, i2.IonTitle, i2.IonToolbar],\n    styles: [\"[_ngcontent-%COMP%]:root{--ion-color-custom: #ffb800;--ion-color-custom-rgb: 255,184,0;--ion-color-custom-contrast: #000000;--ion-color-custom-contrast-rgb: 0,0,0;--ion-color-custom-shade: #e0a200;--ion-color-custom-tint: #ffbf1a}.ion-color-custom[_ngcontent-%COMP%]{--ion-color-base: var(--ion-color-custom);--ion-color-base-rgb: var(--ion-color-custom-rgb);--ion-color-contrast: var(--ion-color-custom-contrast);--ion-color-contrast-rgb: var(--ion-color-custom-contrast-rgb);--ion-color-shade: var(--ion-color-custom-shade);--ion-color-tint: var(--ion-color-custom-tint)}ion-datetime[_ngcontent-%COMP%]{--ion-color-step-650: #ffb800;--ion-color-step-500: #ffffff}.tripleContainer[_ngcontent-%COMP%]{background-position:center top,left bottom,right bottom!important;background-repeat:no-repeat,no-repeat,no-repeat!important;background-size:55% 55%,55% 55%,55% 55%!important;color:transparent}.doubleContainer[_ngcontent-%COMP%]{width:200px;height:200px;background-image:url(/assets/feeling/soso.svg),url(/assets/feeling/surprise.svg);background-position:left top,right bottom;background-repeat:no-repeat,no-repeat;background-size:60% 60%,60% 60%}\"]\n  });\n  return Tab1Page;\n})();","map":null,"metadata":{},"sourceType":"module"}